rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // 1. Register
    match /users/{userId} {
      allow create: if request.auth != null 
                   && request.auth.uid == userId
                   && request.resource.data.userId == userId;
      allow read, list: if request.auth != null;
    }

    // 2. Post
    match /posts/{postId} {
      allow create: if request.auth != null;
      allow read, list: if request.auth != null;
      allow update: if request.auth != null;
    }

    // 3. Friendships
    match /friendships/{docId} {
      allow create: if request.auth != null
                    && request.resource.data.participants is list
                    && request.resource.data.participants.hasAll([request.auth.uid])
                    && request.resource.data.requesterId == request.auth.uid;

      allow read: if request.auth != null
                  && resource.data.participants.hasAny([request.auth.uid]);

      allow update, delete: if request.auth != null
                            && resource.data.participants.hasAny([request.auth.uid]);
    }

    // 4. Notifications
    match /notifications/{docId} {
      allow create: if request.auth != null
                    && request.resource.data.userId != null;

      allow read: if request.auth != null
                  && resource.data.userId == request.auth.uid;

      allow update, delete: if request.auth != null
                            && resource.data.userId == request.auth.uid;
    }
    
    // 5. Chat
    match /chats/{chatId} {
      allow read, update: if request.auth.uid in resource.data.participants;
      allow create: if request.auth.uid != null;
    }

    match /chats/{chatId}/messages/{messageId} {
      allow read, write: if request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
    }
    
    // 6. Comments
    match /posts/{postId}/comments/{commentId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
  }
}
